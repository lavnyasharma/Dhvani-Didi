{"ast":null,"code":"var _jsxFileName = \"/Users/lavanya/dhvanididi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport './App.css';\n\n// Replace with the path to your credentials JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const droppedFile = event.dataTransfer.files[0];\n    setFile(droppedFile);\n  };\n  const parseResume = async resume => {\n    // Placeholder function for resume parsing logic\n    // Implement your actual resume parsing logic here\n    // Extract relevant information from the resume file\n    // Perform any necessary data processing or formatting\n    // Return the parsed resume data\n    return {\n      name: 'John Doe',\n      email: 'john.doe@example.com',\n      education: 'Bachelor of Science',\n      experience: '5 years of experience',\n      skills: 'JavaScript, React, Node.js'\n    };\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const {\n        data\n      } = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        params: {\n          spreadsheetId: SPREADSHEET_ID,\n          credentials: CREDENTIALS_FILE\n        }\n      });\n      const parsedResume = await parseResume(file);\n      console.log('Parsed Resume:', parsedResume);\n      // Here you can store the parsed resume data in Google Sheets\n      // Use the 'data' object returned from the server for further processing or displaying success message\n      alert('Resume parsed and data stored successfully.');\n    } catch (error) {\n      console.error(error);\n      alert('Error parsing resume. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Resume Parser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: file ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File selected: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {\n          className: \"upload-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop your resume file here, or click to select a file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file,\n      className: \"upload-button\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","FaCloudUploadAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","handleDragOver","event","preventDefault","handleDrop","droppedFile","dataTransfer","files","parseResume","resume","name","email","education","experience","skills","handleUpload","formData","FormData","append","data","post","headers","params","spreadsheetId","SPREADSHEET_ID","credentials","CREDENTIALS_FILE","parsedResume","console","log","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/lavanya/dhvanididi/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport './App.css';\n\n // Replace with the path to your credentials JSON file\n\nfunction App() {\n  const [file, setFile] = useState(null);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const droppedFile = event.dataTransfer.files[0];\n    setFile(droppedFile);\n  };\n\n  const parseResume = async (resume) => {\n    // Placeholder function for resume parsing logic\n    // Implement your actual resume parsing logic here\n    // Extract relevant information from the resume file\n    // Perform any necessary data processing or formatting\n    // Return the parsed resume data\n    return {\n      name: 'John Doe',\n      email: 'john.doe@example.com',\n      education: 'Bachelor of Science',\n      experience: '5 years of experience',\n      skills: 'JavaScript, React, Node.js',\n    };\n  };\n\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n\n      const { data } = await axios.post('http://localhost:5000/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        params: {\n          spreadsheetId: SPREADSHEET_ID,\n          credentials: CREDENTIALS_FILE,\n        },\n      });\n\n      const parsedResume = await parseResume(file);\n      console.log('Parsed Resume:', parsedResume);\n      // Here you can store the parsed resume data in Google Sheets\n      // Use the 'data' object returned from the server for further processing or displaying success message\n      alert('Resume parsed and data stored successfully.');\n    } catch (error) {\n      console.error(error);\n      alert('Error parsing resume. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Resume Parser</h1>\n      <div\n        className=\"dropzone\"\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {file ? (\n          <p>File selected: {file.name}</p>\n        ) : (\n          <>\n            <FaCloudUploadAlt className=\"upload-icon\" />\n            <p>Drag and drop your resume file here, or click to select a file.</p>\n          </>\n        )}\n      </div>\n      <button onClick={handleUpload} disabled={!file} className=\"upload-button\">\n        Upload\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}