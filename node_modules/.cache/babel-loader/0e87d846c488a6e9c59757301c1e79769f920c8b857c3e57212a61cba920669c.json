{"ast":null,"code":"var _jsxFileName = \"/Users/lavanya/dhvanididi/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SPREADSHEET_ID = '1NpS050jqZD2OFY7-ERdlnXOnLAdqte4916i6KRIvaUI'; // Replace with your Google Sheets ID\nconst CREDENTIALS_FILE = '/Users/lavanya/dhvanididi/credentials.json';\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const droppedFile = event.dataTransfer.files[0];\n    setFile(droppedFile);\n  };\n  const handleFileSelect = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n  const parseResume = resume => {\n    return new Promise((resolve, reject) => {\n      Papa.parse(resume, {\n        complete: results => {\n          const data = results.data;\n          // Extract the required fields from the parsed resume data\n          // For example, assuming the gender is in the first row, second column:\n          const gender = data[0][1];\n          // Similarly, extract other fields as needed\n          // Resolve with the extracted fields\n          resolve({\n            gender\n          });\n        },\n        error: error => {\n          reject(error);\n        }\n      });\n    });\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n      const {\n        data\n      } = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        params: {\n          spreadsheetId: SPREADSHEET_ID,\n          credentials: CREDENTIALS_FILE\n        }\n      });\n      const parsedResume = await parseResume(file);\n      console.log('Parsed Resume:', parsedResume);\n      // Here you can store the parsed resume data in Google Sheets\n      // Use the 'data' object returned from the server for further processing or displaying success message\n      alert('Resume parsed and data stored successfully.');\n    } catch (error) {\n      console.error(error);\n      alert('Error parsing resume. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Resume Parser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      onClick: () => fileInputRef.current.click(),\n      children: file ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File selected: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaCloudUploadAlt, {\n          className: \"upload-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop your resume file here, or click to select a file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileSelect,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !file,\n      className: \"upload-button\",\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kNILOh2iWJ4R/9q826rTQ3S5DBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Papa","axios","FaCloudUploadAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","SPREADSHEET_ID","CREDENTIALS_FILE","App","_s","file","setFile","fileInputRef","handleDragOver","event","preventDefault","handleDrop","droppedFile","dataTransfer","files","handleFileSelect","selectedFile","target","parseResume","resume","Promise","resolve","reject","parse","complete","results","data","gender","error","handleUpload","formData","FormData","append","post","headers","params","spreadsheetId","credentials","parsedResume","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDrop","onClick","current","click","name","type","ref","onChange","style","display","disabled","_c","$RefreshReg$"],"sources":["/Users/lavanya/dhvanididi/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport { FaCloudUploadAlt } from 'react-icons/fa';\nimport './App.css';\n\nconst SPREADSHEET_ID = '1NpS050jqZD2OFY7-ERdlnXOnLAdqte4916i6KRIvaUI'; // Replace with your Google Sheets ID\nconst CREDENTIALS_FILE = '/Users/lavanya/dhvanididi/credentials.json';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n    const droppedFile = event.dataTransfer.files[0];\n    setFile(droppedFile);\n  };\n\n  const handleFileSelect = (event) => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const parseResume = (resume) => {\n    return new Promise((resolve, reject) => {\n      Papa.parse(resume, {\n        complete: (results) => {\n          const data = results.data;\n          // Extract the required fields from the parsed resume data\n          // For example, assuming the gender is in the first row, second column:\n          const gender = data[0][1];\n          // Similarly, extract other fields as needed\n          // Resolve with the extracted fields\n          resolve({ gender });\n        },\n        error: (error) => {\n          reject(error);\n        },\n      });\n    });\n  };\n\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('resume', file);\n\n      const { data } = await axios.post('http://localhost:5000/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n        params: {\n          spreadsheetId: SPREADSHEET_ID,\n          credentials: CREDENTIALS_FILE,\n        },\n      });\n\n      const parsedResume = await parseResume(file);\n      console.log('Parsed Resume:', parsedResume);\n      // Here you can store the parsed resume data in Google Sheets\n      // Use the 'data' object returned from the server for further processing or displaying success message\n      alert('Resume parsed and data stored successfully.');\n    } catch (error) {\n      console.error(error);\n      alert('Error parsing resume. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Resume Parser</h1>\n      <div\n        className=\"dropzone\"\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        onClick={() => fileInputRef.current.click()}\n      >\n        {file ? (\n          <p>File selected: {file.name}</p>\n        ) : (\n          <>\n            <FaCloudUploadAlt className=\"upload-icon\" />\n            <p>Drag and drop your resume file here, or click to select a file.</p>\n          </>\n        )}\n      </div>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={handleFileSelect}\n        style={{ display: 'none' }}\n      />\n      <button onClick={handleUpload} disabled={!file} className=\"upload-button\">\n        Upload\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}